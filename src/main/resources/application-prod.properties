# Server Configuration
server.port=${PORT:8080}

# Tomcat Configuration
server.tomcat.threads.max=50
server.tomcat.threads.min-spare=5
server.tomcat.max-connections=100
server.tomcat.accept-count=10
server.tomcat.connection-timeout=20000
server.max-http-header-size=65536

# Database Configuration
spring.datasource.url=${DATABASE_URL}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.open-in-view=false

# Disable automatic schema initialization
spring.sql.init.mode=never
spring.jpa.defer-datasource-initialization=false

# Security Configuration
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=${JWT_EXPIRATION:86400000}

# Logging Configuration
logging.level.org.springframework.security=INFO
logging.level.com.college.bus=INFO
logging.level.org.hibernate.SQL=INFO

# CORS Configuration
spring.mvc.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://*.yourdomain.com}
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=Authorization,Content-Type,X-Requested-With
spring.mvc.cors.exposed-headers=Authorization
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.max-age=3600

# Security Headers
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# SSL Configuration (if using HTTPS directly on Tomcat)
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.protocol=TLS
server.ssl.enabled-protocols=TLSv1.2,TLSv1.3 